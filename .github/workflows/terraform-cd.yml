name: terraform-cd

on:
  workflow_call:
    secrets:
      github-token:
        required: true
      azure-credentials-env:
        required: true
      azure-credentials-adb2c:
        required: false
      azure-shared-subscription-id:
        required: true
    inputs:
      region:
        required: true
        type: string
      team:
        required: true
        type: string
      environment:
        required: true
        type: string
        description: 'JSON array of environments to deploy'
      terraform-version:
        required: true
        type: string
      paths:
        required: false
        type: string

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(inputs.environment) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Fake Terraform Plan
        run: echo "‚úÖ Terraform plan completed (placeholder)"

      - name: Slack - Waiting for Approval
        run: |
          echo "üîç Debug: Environment = '${{ matrix.environment }}'"
          
          MATRIX_ENV="${{ matrix.environment }}"
          UPPER_ENV=$(echo "$MATRIX_ENV" | tr '[:lower:]' '[:upper:]')
          LOWER_ENV=$(echo "$MATRIX_ENV" | tr '[:upper:]' '[:lower:]')
          
          echo "üîç Debug: Case variations:"
          echo "  Original: [$MATRIX_ENV]"
          echo "  Uppercase: [$UPPER_ENV]" 
          echo "  Lowercase: [$LOWER_ENV]"
          
          WEBHOOK_URL=""
          # Direct secret access based on environment
          case "$LOWER_ENV" in
            "dev") WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL_DEV }}" ;;
            "stg") WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL_STG }}" ;;  
            "prd") WEBHOOK_URL="${{ secrets.SLACK_WEBHOOK_URL_PRD }}" ;;
            *) 
              echo "‚ùå No case match for: [$MATRIX_ENV]"
              echo "   Tried lowercase: [$LOWER_ENV]"
              ;;
          esac
          
          echo "üîç Debug: WEBHOOK_URL length = ${#WEBHOOK_URL}"
          
          if [ ! -z "$WEBHOOK_URL" ]; then
            echo "‚úÖ Sending approval request for $LOWER_ENV (original: $MATRIX_ENV)"
            curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\":\"‚è≥ Waiting for Approval - APIM Deploy: $LOWER_ENV\",
                \"blocks\":[
                  {
                    \"type\":\"section\",
                    \"text\":{
                      \"type\":\"mrkdwn\",
                      \"text\":\"*‚è≥ Waiting for Manual Approval*\\n\\n*Environment:* $LOWER_ENV\\n*Repository:* ${{ github.repository }}\\n*Triggered by:* ${{ github.actor }}\\n\\nAPIM infrastructure plan completed successfully. Manual approval required to proceed with deployment.\"
                    }
                  },
                  {
                    \"type\":\"actions\",
                    \"elements\":[
                      {
                        \"type\":\"button\",
                        \"text\":{\"type\":\"plain_text\",\"text\":\"ÔøΩ Approve Deployment\"},
                        \"url\":\"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
                      }
                    ]
                  }
                ]
              }" \
              "$WEBHOOK_URL"
            echo "‚úÖ Approval request sent successfully"
          else
            echo "‚ùå No webhook URL found for environment: ${{ matrix.environment }}"
            echo "üí° Please add SLACK_WEBHOOK_URL_$(echo ${{ matrix.environment }} | tr '[:lower:]' '[:upper:]') secret"
          fi


  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    strategy:
      matrix:
        environment: ${{ fromJson(inputs.environment) }}
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Fake Terraform Apply
        run: echo "üöÄ Terraform apply completed for ${{ matrix.environment }} (placeholder)"
