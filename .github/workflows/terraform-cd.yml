name: terraform-cd

on:
  workflow_call:
    secrets:
      github-token:
        required: true
      azure-credentials-env:
        required: false
      azure-credentials-adb2c:
        required: false
      azure-shared-subscription-id:
        required: false
      slack-webhook-url:
        required: false
    inputs:
      region:
        required: true
        type: string
      team:
        required: true
        type: string
      paths:
        required: true
        type: string
      environment:
        required: true
        type: string
      terraform-version:
        required: true
        type: string

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Fake Terraform Plan
        run: echo "‚úÖ Terraform plan completed (placeholder)"

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        path: ${{ fromJson(inputs.paths) }}
    defaults:
      run:
        shell: bash
        working-directory: environments/${{ matrix.path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Extract Environment from Path
        id: extract
        run: |
          echo "Matrix path: ${{ matrix.path }}"
          envName=$(echo "${{ matrix.path }}" | cut -d'/' -f1)
          echo "envName=$envName" >> $GITHUB_OUTPUT
          echo "Extracted env=$envName"

      - name: Wait for Approval
        run: echo "‚è≥ Waiting for manual approval before apply..."

      - name: Slack Notify (Approval required)
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "‚è≥ *Terraform Apply is waiting for approval* \nEnvironment: `${{ steps.extract.outputs.envName }}` \nPath: `${{ matrix.path }}`"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack-webhook-url || 'https://hooks.slack.com/services/dummy' }}

      - name: Fake Terraform Apply
        run: echo "üöÄ Terraform apply completed (placeholder)"

      - name: Upload TrustFramework Policy
        if: contains(matrix.path, 'customer-service/ad-b2c')
        uses: azure-ad-b2c/deploy-trustframework-policy@v5
        with:
          folder: environments/${{ matrix.path }}/policies
          files: "TrustFrameworkBase.xml, TrustFrameworkLocalization.xml, TrustFrameworkExtensions.xml, SignUpOrSignin.xml, SignUp.xml, SignIn.xml"
          tenant: ${{ env.TF_VAR_GREENLANE_ADB2C_TENANT_ID || 'dummy-tenant' }}
          clientId: ${{ env.TF_VAR_GREENLANE_ADB2C_CLIENT_ID || 'dummy-client' }}
          clientSecret: ${{ env.TF_VAR_GREENLANE_ADB2C_CLIENT_SECRET || 'dummy-secret' }}
