name: Auto Trigger Terraform CD (Mock Validation)

on:
  workflow_call:
    secrets:
      github-token:
        required: true

      azure-credentials-dev:
        required: false
      azure-credentials-stg:
        required: false
      azure-credentials-prd:
        required: false

      azure-credentials-adb2c-dev:
        required: false
      azure-credentials-adb2c-stg:
        required: false
      azure-credentials-adb2c-prd:
        required: false

      azure-shared-subscription-id:
        required: true

      SLACK_WEBHOOK_URL_DEV:
        required: false
      SLACK_WEBHOOK_URL_STG:
        required: false
      SLACK_WEBHOOK_URL_PRD:
        required: false

    inputs:
      team:
        required: true
        type: string
      environments:
        required: true
        type: string
      paths:
        required: true
        type: string
      terraform-version:
        required: true
        type: string

jobs:
  terraform-plan:
    name: Mock Plan ${{ matrix.env }}
    strategy:
      matrix:
        env: ${{ fromJson(inputs.environments) }}
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - name: Compute Runner Group
        id: compute-group
        run: |
          env="${{ matrix.env }}"
          if [ "$env" = "dev" ]; then
            group="linux-2core-dev-eastus2-group"
          else
            group="linux-2core-${env}-centralus-group"
          fi
          echo "group=$group" >> $GITHUB_OUTPUT
          echo "Resolved runner group for $env → $group"

      - name: Select SP Credentials
        id: select-sp
        run: |
          env="${{ matrix.env }}"
          case "$env" in
            dev) sel='${{ secrets.azure-credentials-dev }}' ;;
            stg) sel='${{ secrets.azure-credentials-stg }}' ;;
            prd) sel='${{ secrets.azure-credentials-prd }}' ;;
            *) echo "Unknown environment: $env" >&2; exit 1 ;;
          esac
          echo "SP Credential selected for $env: $sel"
          echo "creds=$sel" >> $GITHUB_OUTPUT

      - name: Select ADB2C Credentials
        id: select-adb2c
        run: |
          env="${{ matrix.env }}"
          case "$env" in
            dev) adb2c='${{ secrets.azure-credentials-adb2c-dev }}' ;;
            stg) adb2c='${{ secrets.azure-credentials-adb2c-stg }}' ;;
            prd) adb2c='${{ secrets.azure-credentials-adb2c-prd }}' ;;
            *) echo "Unknown environment: $env" >&2; exit 1 ;;
          esac
          echo "ADB2C Credential selected for $env: $adb2c"
          echo "creds-adb2c=$adb2c" >> $GITHUB_OUTPUT

      - name: Print Summary
        run: |
          echo "--------------------------------------"
          echo "Environment: ${{ matrix.env }}"
          echo "Runner Group: ${{ steps.compute-group.outputs.group }}"
          echo "SP Credential: ${{ steps.select-sp.outputs.creds }}"
          echo "ADB2C Credential: ${{ steps.select-adb2c.outputs.creds-adb2c }}"
          echo "--------------------------------------"

  approval-notification:
    name: Mock Slack Approval
    needs: [terraform-plan]
    if: needs.terraform-plan.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ${{ fromJson(inputs.environments) }}
      fail-fast: false
    env:
      SLACK_WEBHOOK_URL_DEV: ${{ secrets.SLACK_WEBHOOK_URL_DEV }}
      SLACK_WEBHOOK_URL_STG: ${{ secrets.SLACK_WEBHOOK_URL_STG }}
      SLACK_WEBHOOK_URL_PRD: ${{ secrets.SLACK_WEBHOOK_URL_PRD }}

    steps:
      - name: Compute Runner Group
        id: compute-group
        run: |
          env="${{ matrix.env }}"
          if [ "$env" = "dev" ]; then
            group="linux-2core-dev-eastus2-group"
          else
            group="linux-2core-${env}-centralus-group"
          fi
          echo "group=$group" >> $GITHUB_OUTPUT
          echo "Resolved runner group for $env → $group"

      - name: Print Slack Webhook Summary
        run: |
          case "${{ matrix.env }}" in
            dev) WEBHOOK_URL="$SLACK_WEBHOOK_URL_DEV" ;;
            stg) WEBHOOK_URL="$SLACK_WEBHOOK_URL_STG" ;;
            prd) WEBHOOK_URL="$SLACK_WEBHOOK_URL_PRD" ;;
            *) WEBHOOK_URL="" ;;
          esac

          echo "--------------------------------------"
          echo "Environment: ${{ matrix.env }}"
          echo "Runner Group: ${{ steps.compute-group.outputs.group }}"
          if [ -z "$WEBHOOK_URL" ]; then
            echo "No Slack webhook defined for this environment."
          else
            echo "Slack webhook available for ${{ matrix.env }} (length: ${#WEBHOOK_URL})"
          fi
          echo "--------------------------------------"

  terraform-apply:
    name: Mock Apply ${{ matrix.env }}
    needs: [terraform-plan]
    if: needs.terraform-plan.result == 'success'
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ${{ fromJson(inputs.environments) }}
      fail-fast: false

    steps:
      - name: Compute Runner Group
        id: compute-group
        run: |
          env="${{ matrix.env }}"
          if [ "$env" = "dev" ]; then
            group="linux-2core-dev-eastus2-group"
          else
            group="linux-2core-${env}-centralus-group"
          fi
          echo "group=$group" >> $GITHUB_OUTPUT
          echo "Resolved runner group for $env → $group"

      - name: Print Apply Step Info
        run: |
          echo "--------------------------------------"
          echo "Environment: ${{ matrix.env }}"
          echo "Runner Group: ${{ steps.compute-group.outputs.group }}"
          echo "Would apply Terraform here if not in mock mode."
          echo "--------------------------------------"
