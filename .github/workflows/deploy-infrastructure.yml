name: Deploy Infrastructure

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'environments/**/apim-config/openapi/*.yaml'

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options: [dev, stg, prd]

      service:
        description: 'Service'
        required: true
        type: choice
        options: [cross-service, charging-service, customer-service, ems-service, ocpi-service, frontend, public-api, partner-api]

      config:
        description: 'Configuration'
        required: false
        type: choice
        options: [infrastructure, apim-config, psql-config, ad-b2c, " "]

jobs:
  paths:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      result: ${{ github.event_name == 'workflow_dispatch' && steps.set.outputs.input || steps.filter.outputs.apim }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Filter Paths (auto mode)
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: .github/file-filters.yml

      - name: Debug Filter Output
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          echo "Filter outputs: ${{ toJson(steps.filter.outputs) }}"

      - name: Set Path (manual mode)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: set
        run: echo "input=[\"${{ inputs.environment }}/${{ inputs.service }}/${{ inputs.config }}\"]" >> $GITHUB_OUTPUT

      - name: Extract Env from Path
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: envmap
        run: |
          path="${{ fromJson(steps.filter.outputs.apim)[0] }}"
          env=$(echo "$path" | cut -d'/' -f1)
          echo "env=$env" >> $GITHUB_OUTPUT
          echo "Detected path=$path"
          echo "Detected env=$env"

  cd:
    name: Terraform CD
    if: ${{ (needs.paths.outputs.result != '[]' && github.event.pull_request.merged == true) || github.event_name == 'workflow_dispatch' }}
    needs: paths
    uses: ./.github/workflows/terraform-cd.yml
    secrets: 
      github-token: ${{ secrets.BOT_GITHUB || 'dummy-github-token' }}
      azure-credentials-env: ${{ secrets[format('AZ_SP_INFRA_CREDS_{0}', inputs.environment)] || 'dummy-az-env' }}
      azure-credentials-adb2c: ${{ secrets[format('AZ_B2C_APP_{0}', inputs.environment)] || 'dummy-az-adb2c' }}
      azure-shared-subscription-id: ${{ secrets.AZ_SHARED_SUBSCRIPTION_ID || 'dummy-subid' }}
    with:
      team: greenlane
      environment: ${{ inputs.environment }}
      paths: ${{ needs.paths.outputs.result }}
      terraform-version: 1.6.3
      region: ${{ inputs.environment == 'dev' && 'eastus2' || 'centralus' }}
