name: Deploy Infrastructure (Auto)

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'environments/**/apim-config/openapi/*.yaml'

jobs:
  paths:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.filter.outputs.changes }}
      result: ${{ steps.filter.outputs.changes }}
      envs: ${{ steps.extract-envs.outputs.envs }}
      services: ${{ steps.extract-services.outputs.services }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Filter Paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: '.github/file-filters.yml'

      - name: Extract unique environments
        id: extract-envs
        run: |
          changes='${{ steps.filter.outputs.changes }}'
          echo "Raw changes: $changes"

          envs=$(echo "$changes" | jq -r '.[]' | cut -d'/' -f1 | sort -u)
          echo "Unique envs: $envs"

          json_array=$(echo "$envs" | tr ' ' '\n' | jq -R . | jq -s -c .)
          echo "envs=$json_array" >> $GITHUB_OUTPUT
          echo "JSON envs array: $json_array"

      - name: Extract unique services
        id: extract-services
        run: |
          changes='${{ steps.filter.outputs.changes }}'
          services=$(echo "$changes" | jq -r '.[]' | cut -d'/' -f2 | sort -u)
          echo "services=$(echo $services | tr ' ' ',')" >> $GITHUB_OUTPUT
          echo "Unique services: $services"

      - name: Show parsed outputs
        run: |
          echo "Detected envs: [${{ steps.extract-envs.outputs.envs }}]"
          echo "Detected services: [${{ steps.extract-services.outputs.services }}]"

  cd:
    name: Terraform CD
    needs: paths
    if: ${{ needs.paths.outputs.result != '[]' && github.event.pull_request.merged == true }}
    uses: ./.github/workflows/auto-terraform-cd.yml
    secrets:
      github-token: ${{ secrets.BOT_GITHUB }}
      azure-credentials-env: ${{ secrets.AZ_SP_INFRA_CREDS_DEV }}
      azure-credentials-adb2c: ${{ secrets.AZ_B2C_APP_DEV }}
      azure-shared-subscription-id: ${{ secrets.AZ_SHARED_SUBSCRIPTION_ID }}
      # âœ… Forward Slack webhooks
      SLACK_WEBHOOK_URL_DEV: ${{ secrets.SLACK_WEBHOOK_URL_DEV }}
      SLACK_WEBHOOK_URL_STG: ${{ secrets.SLACK_WEBHOOK_URL_STG }}
      SLACK_WEBHOOK_URL_PRD: ${{ secrets.SLACK_WEBHOOK_URL_PRD }}
    with:
      team: greenlane
      environment: auto
      paths: ${{ needs.paths.outputs.result }}
      environments: ${{ needs.paths.outputs.envs }}
      terraform-version: 1.6.3
      test-mode: false
